{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","newMovie","titleError","descriptionError","imgUrlError","imdbUrlError","imdbIdError","handleChange","event","target","name","value","setState","checkFormTitle","trim","checkFormDescription","validateUrl","test","checkFormImgUrl","checkFormImdbUrl","checkFormImdbId","handleSubmitForm","e","preventDefault","props","addFilm","clearForm","controlButton","length","this","onSubmit","cn","type","placeholder","onChange","onBlur","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"syEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,uBCKfC,G,MAAb,4MACEC,MAAe,CACbC,SAAU,CACRf,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,IAEVI,YAAY,EACZC,kBAAkB,EAClBC,aAAa,EACbC,cAAc,EACdC,aAAa,GAbjB,EAiBEC,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKC,UAAS,SAACZ,GAAD,MAAY,CACxBC,SAAS,2BACJD,EAAMC,UADH,kBAELS,EAAOC,IAEVT,YAAY,EACZC,kBAAkB,EAClBG,aAAa,OA3BnB,EA+BEO,eAAiB,WACV,EAAKb,MAAMC,SAASf,MAAM4B,QAC7B,EAAKF,UAAS,iBAAO,CACnBV,YAAY,OAlCpB,EAuCEa,qBAAuB,WAChB,EAAKf,MAAMC,SAASd,YAAY2B,QACnC,EAAKF,UAAS,iBAAO,CACnBT,kBAAkB,OA1C1B,EA+CEa,YAAc,SAAC5B,GAIb,MAFY,qKAED6B,KAAK7B,IAnDpB,EAsDE8B,gBAAkB,WAChB,IAAQ9B,EAAW,EAAKY,MAAMC,SAAtBb,OACI,EAAK4B,YAAY5B,GAO3B,EAAKwB,UAAS,iBAAO,CACnBR,aAAa,MALf,EAAKQ,UAAS,iBAAO,CACnBR,aAAa,OA5DrB,EAqEEe,iBAAmB,WACjB,IAAQ9B,EAAY,EAAKW,MAAMC,SAAvBZ,QACI,EAAK2B,YAAY3B,GAO3B,EAAKuB,UAAS,iBAAO,CACnBP,cAAc,MALhB,EAAKO,UAAS,iBAAO,CACnBP,cAAc,OA3EtB,EAoFEe,gBAAkB,WAChB,QAAK,EAAKpB,MAAMC,SAASH,OAAOgB,SAC9B,EAAKF,UAAS,iBAAO,CACnBN,aAAa,OAGR,IA1Fb,EAgGEe,iBAAmB,SAACC,GAClBA,EAAEC,kBAE8B,IAA5B,EAAKvB,MAAMK,eAIgB,IAA3B,EAAKL,MAAMI,cAIf,EAAKoB,MAAMC,QAAQ,EAAKzB,MAAMC,UAC9B,EAAKyB,cA5GT,EA+GEA,UAAY,WACV,EAAKd,SAAS,CACZX,SAAU,CACRf,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,OAtHhB,EA2HE6B,cAAgB,WACd,MAMI,EAAK3B,MAAMC,SALbf,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAS,EALF,EAKEA,OAGF,QAAQ,GACN,KAAKZ,EAAM0C,OAAS,EACpB,KAAKzC,EAAYyC,OAAS,EAC1B,KAAKxC,EAAOwC,OAAS,EACrB,KAAKvC,EAAQuC,OAAS,EACtB,KAAK9B,EAAO8B,OAAS,EACnB,OAAO,EACT,QACE,OAAO,IA5If,4CAgJE,WACE,MAMIC,KAAK7B,MAAMC,SALbf,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAS,EALF,EAKEA,OAGF,OACE,uBAAMR,UAAU,OAAOwC,SAAUD,KAAKR,iBAAtC,UACE,oBAAI/B,UAAU,cAAd,sBACA,uBACEA,UAAWyC,IAAG,cACZ,CAAE,qBAAsBF,KAAK7B,MAAME,aACrC8B,KAAK,OACLC,YAAY,cACZvB,KAAK,QACLC,MAAOzB,EACPgD,SAAUL,KAAKtB,aACf4B,OAAQN,KAAKhB,iBAEdgB,KAAK7B,MAAME,YACV,oBAAGZ,UAAU,QAAb,oDAEE,uBACA,sBAAMA,UAAU,iBAAhB,+CAIJ,uBACEA,UAAWyC,IAAG,cACZ,CAAE,qBAAsBF,KAAK7B,MAAMG,mBACrC6B,KAAK,OACLC,YAAY,oBACZvB,KAAK,cACLC,MAAOxB,EACP+C,SAAUL,KAAKtB,aACf4B,OAAQN,KAAKd,uBAEdc,KAAK7B,MAAMG,kBACV,oBAAGb,UAAU,QAAb,wDAEE,uBACA,sBAAMA,UAAU,iBAAhB,gEAIJ,uBACEA,UAAWyC,IAAG,cACZ,CAAE,qBAAsBF,KAAK7B,MAAMI,cACrC4B,KAAK,OACLC,YAAY,eACZvB,KAAK,SACLC,MAAOvB,EACP8C,SAAUL,KAAKtB,aACf4B,OAAQN,KAAKX,kBAEdW,KAAK7B,MAAMI,aACV,oBAAGd,UAAU,QAAb,8CAEE,uBACA,sBAAMA,UAAU,iBAAhB,kDAMJ,uBACEA,UAAWyC,IAAG,cACZ,CAAE,qBAAsBF,KAAK7B,MAAMK,eACrC2B,KAAK,OACLC,YAAY,gBACZvB,KAAK,UACLC,MAAOtB,EACP6C,SAAUL,KAAKtB,aACf4B,OAAQN,KAAKV,mBAEdU,KAAK7B,MAAMK,cACV,oBAAGf,UAAU,QAAb,6CAEE,uBACA,sBAAMA,UAAU,iBAAhB,kEAIJ,uBACEA,UAAWyC,IAAG,cACZ,CAAE,qBAAsBF,KAAK7B,MAAMM,cACrC0B,KAAK,OACLC,YAAY,eACZvB,KAAK,SACLC,MAAOb,EACPoC,SAAUL,KAAKtB,aACf4B,OAAQN,KAAKT,kBAEdS,KAAK7B,MAAMM,aACV,oBAAGhB,UAAU,QAAb,2CAEE,uBACA,sBAAMA,UAAU,iBAAhB,uCAIJ,wBACE0C,KAAK,SACL1C,UAAU,wBACV8C,SAAUP,KAAKF,gBAHjB,0BAOA,oEA/PR,GAA8BU,c,QCPjBC,EAAb,4MACEtC,MAAe,CACbL,OAAQ4C,GAFZ,EAKEC,SAAW,SAACvC,GACV,EAAKW,UAAS,SAACZ,GAAD,MAAY,CACxBL,OAAO,GAAD,mBAAMK,EAAML,QAAZ,CAAoBM,SAPhC,4CAWE,WACE,IAAQN,EAAWkC,KAAK7B,MAAhBL,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAUmC,QAASI,KAAKW,oBApBlC,GAAyBC,IAAMJ,WCN/BK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.54338b45.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport cn from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  addFilm: (newMovie: Movie) => void,\n};\n\ntype State = {\n  newMovie: Movie,\n  titleError: boolean,\n  descriptionError: boolean,\n  imgUrlError: boolean,\n  imdbUrlError: boolean,\n  imdbIdError: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    newMovie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    titleError: false,\n    descriptionError: false,\n    imgUrlError: false,\n    imdbUrlError: false,\n    imdbIdError: false,\n\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    this.setState((state) => ({\n      newMovie: {\n        ...state.newMovie,\n        [name]: value,\n      },\n      titleError: false,\n      descriptionError: false,\n      imdbIdError: false,\n    }));\n  };\n\n  checkFormTitle = () => {\n    if (!this.state.newMovie.title.trim()) {\n      this.setState(() => ({\n        titleError: true,\n      }));\n    }\n  };\n\n  checkFormDescription = () => {\n    if (!this.state.newMovie.description.trim()) {\n      this.setState(() => ({\n        descriptionError: true,\n      }));\n    }\n  };\n\n  validateUrl = (imgUrl: string) => {\n    // eslint-disable-next-line\n    const reg = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    return reg.test(imgUrl);\n  };\n\n  checkFormImgUrl = () => {\n    const { imgUrl } = this.state.newMovie;\n    const res = this.validateUrl(imgUrl);\n\n    if (!res) {\n      this.setState(() => ({\n        imgUrlError: true,\n      }));\n    } else {\n      this.setState(() => ({\n        imgUrlError: false,\n      }));\n    }\n  };\n\n  checkFormImdbUrl = () => {\n    const { imdbUrl } = this.state.newMovie;\n    const res = this.validateUrl(imdbUrl);\n\n    if (!res) {\n      this.setState(() => ({\n        imdbUrlError: true,\n      }));\n    } else {\n      this.setState(() => ({\n        imdbUrlError: false,\n      }));\n    }\n  };\n\n  checkFormImdbId = () => {\n    if (!this.state.newMovie.imdbId.trim()) {\n      this.setState(() => ({\n        imdbIdError: true,\n      }));\n\n      return false;\n    }\n\n    return true;\n  };\n\n  handleSubmitForm = (e: { preventDefault: () => void; }) => {\n    e.preventDefault();\n\n    if (this.state.imdbUrlError === true) {\n      return;\n    }\n\n    if (this.state.imgUrlError === true) {\n      return;\n    }\n\n    this.props.addFilm(this.state.newMovie);\n    this.clearForm();\n  };\n\n  clearForm = () => {\n    this.setState({\n      newMovie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  };\n\n  controlButton = () => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.newMovie;\n\n    switch (true) {\n      case title.length < 1:\n      case description.length < 1:\n      case imgUrl.length < 1:\n      case imdbUrl.length < 1:\n      case imdbId.length < 1:\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.newMovie;\n\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmitForm}>\n        <h2 className=\"form__title\">Add film</h2>\n        <input\n          className={cn('form__input',\n            { 'form__input--error': this.state.titleError })}\n          type=\"text\"\n          placeholder=\"Enter title\"\n          name=\"title\"\n          value={title}\n          onChange={this.handleChange}\n          onBlur={this.checkFormTitle}\n        />\n        {this.state.titleError && (\n          <p className=\"error\">\n            Title must contains at least one letter\n            <br />\n            <span className=\"error--example\">For example: Angels and Demons</span>\n          </p>\n        )}\n\n        <input\n          className={cn('form__input',\n            { 'form__input--error': this.state.descriptionError })}\n          type=\"text\"\n          placeholder=\"Enter description\"\n          name=\"description\"\n          value={description}\n          onChange={this.handleChange}\n          onBlur={this.checkFormDescription}\n        />\n        {this.state.descriptionError && (\n          <p className=\"error\">\n            Description must contains at least one word\n            <br />\n            <span className=\"error--example\">For example: Harvard symbologist Robert Langdon</span>\n          </p>\n        )}\n\n        <input\n          className={cn('form__input',\n            { 'form__input--error': this.state.imgUrlError })}\n          type=\"text\"\n          placeholder=\"Enter imgUrl\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          onChange={this.handleChange}\n          onBlur={this.checkFormImgUrl}\n        />\n        {this.state.imgUrlError && (\n          <p className=\"error\">\n            Image Url must be filled with URL\n            <br />\n            <span className=\"error--example\">\n              For example: http://surl.li/bcsiz\n            </span>\n          </p>\n        )}\n\n        <input\n          className={cn('form__input',\n            { 'form__input--error': this.state.imdbUrlError })}\n          type=\"text\"\n          placeholder=\"Enter imdbUrl\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={this.handleChange}\n          onBlur={this.checkFormImdbUrl}\n        />\n        {this.state.imdbUrlError && (\n          <p className=\"error\">\n            Imdb Url must be filled with URL\n            <br />\n            <span className=\"error--example\">For example: https://www.imdb.com/title/tt0808151</span>\n          </p>\n        )}\n\n        <input\n          className={cn('form__input',\n            { 'form__input--error': this.state.imdbIdError })}\n          type=\"text\"\n          placeholder=\"Enter imdbId\"\n          name=\"imdbId\"\n          value={imdbId}\n          onChange={this.handleChange}\n          onBlur={this.checkFormImdbId}\n        />\n        {this.state.imdbIdError && (\n          <p className=\"error\">\n            ImdbId must be filled with URL\n            <br />\n            <span className=\"error--example\">For example: tt0808151</span>\n          </p>\n        )}\n\n        <button\n          type=\"submit\"\n          className=\"form__input form__btn\"\n          disabled={this.controlButton()}\n        >\n          Add new film\n        </button>\n        <span>* all fields are required</span>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie: Movie) => {\n    this.setState((state) => ({\n      movies: [...state.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addFilm={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}